# CI/CD Terraform

on:
  push:
    branches:
      - main
    paths:
      - '**/*.tf'
  pull_request:
    paths:
      - '**/*.tf'

jobs:
  ci:
    runs-on: ubuntu-latest
    environment: "vmvarela-github-as-code-1"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set TF WORKSPACE
        run: |
          sed -i 's/##TERRAFORM-WS##/${{ vars.TF_WS }}/' main.tf
          sed -i 's/##TERRAFORM-ORG##/${{ vars.TF_ORG }}/' main.tf
          sed -i 's/##GITHUB-ORGNAME##/${{ vars.TF_VAR_ORGNAME }}/' main.tf
          cat main.tf

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.3
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply (entorno rama)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name != 'pull_request'
        run: terraform apply -auto-approve -input=false

  cd:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    environment: "prod"
    runs-on: ubuntu-latest
    needs: [ci]
    steps:
      - name: Terraform Apply
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: terraform apply -auto-approve -input=false
